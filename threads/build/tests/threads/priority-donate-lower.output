Kernel command line: -q run priority-donate-lower
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  209,510,400 loops/s.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 31.
(priority-donate-lower) Lowering base priority...
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 21.
(priority-donate-lower) acquire must already have finished.
(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
(priority-donate-lower) end
Execution of 'priority-donate-lower' complete.
Timer: 23 ticks
Thread: 0 idle ticks, 23 kernel ticks, 0 user ticks
Console: 821 characters output
Keyboard: 0 keys pressed
PoweringInterrupt 0x0d (#GP General Protection Exception) at rip=8004208dba
 cr2=0000000000000000 error=               c
rax 0000000000000000 rbx 0000000000204400 rcx 0000000000000067 rdx 00000000000003f9
rsp 0000008004000ef8 rbp 0000008004000f30 rsi 0000000000000003 rdi 0000000000000001
rip 0000008004208dba r8 0000008004000ec8  r9 0000008004216709 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00200002
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x8004213421 0x80042089af 0x8004208d61 0x8004207ac3 0x800420e08e 0x80042167d5 0x8004216640 0x80042067f3 0x800420613d.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 24 ticks
Thread: 0 idle ticks, 24 kernel ticks, 0 user ticks
Console: 1